[{"C:\\Users\\BIT\\Desktop\\bitflix\\src\\index.js":"1","C:\\Users\\BIT\\Desktop\\bitflix\\src\\components\\App.js":"2","C:\\Users\\BIT\\Desktop\\bitflix\\src\\components\\GlobalStyles.js":"3","C:\\Users\\BIT\\Desktop\\bitflix\\src\\components\\Router.js":"4","C:\\Users\\BIT\\Desktop\\bitflix\\src\\components\\Header.js":"5","C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\Home\\index.js":"6","C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\TV\\index.js":"7","C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\Detail\\index.js":"8","C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\Search\\index.js":"9","C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\Search\\SearchContainer.js":"10","C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\TV\\TVContainer.js":"11","C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\Home\\HomeContainer.js":"12","C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\Detail\\DetailContainer.js":"13","C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\Search\\SearchPresenter.js":"14","C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\TV\\TVPresenter.js":"15","C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\Home\\HomePresenter.js":"16","C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\Detail\\DetailPresenter.js":"17","C:\\Users\\BIT\\Desktop\\bitflix\\src\\api.js":"18","C:\\Users\\BIT\\Desktop\\bitflix\\src\\components\\Loader.js":"19","C:\\Users\\BIT\\Desktop\\bitflix\\src\\components\\Message.js":"20","C:\\Users\\BIT\\Desktop\\bitflix\\src\\components\\Section.js":"21","C:\\Users\\BIT\\Desktop\\bitflix\\src\\components\\Poster.js":"22"},{"size":157,"mtime":1606873929878,"results":"23","hashOfConfig":"24"},{"size":186,"mtime":1606876199102,"results":"25","hashOfConfig":"24"},{"size":583,"mtime":1606873515259,"results":"26","hashOfConfig":"24"},{"size":921,"mtime":1606882451958,"results":"27","hashOfConfig":"24"},{"size":1757,"mtime":1606883315863,"results":"28","hashOfConfig":"24"},{"size":79,"mtime":1606876778191,"results":"29","hashOfConfig":"24"},{"size":73,"mtime":1606876803549,"results":"30","hashOfConfig":"24"},{"size":85,"mtime":1606876712527,"results":"31","hashOfConfig":"24"},{"size":85,"mtime":1606876786786,"results":"32","hashOfConfig":"24"},{"size":2204,"mtime":1606962072207,"results":"33","hashOfConfig":"24"},{"size":1345,"mtime":1606894640792,"results":"34","hashOfConfig":"24"},{"size":2128,"mtime":1606889364852,"results":"35","hashOfConfig":"24"},{"size":1760,"mtime":1606897980646,"results":"36","hashOfConfig":"24"},{"size":2408,"mtime":1606962032389,"results":"37","hashOfConfig":"24"},{"size":2320,"mtime":1606891508708,"results":"38","hashOfConfig":"24"},{"size":2715,"mtime":1606888942168,"results":"39","hashOfConfig":"24"},{"size":3342,"mtime":1606894260386,"results":"40","hashOfConfig":"24"},{"size":1052,"mtime":1606895421239,"results":"41","hashOfConfig":"24"},{"size":383,"mtime":1606883835608,"results":"42","hashOfConfig":"24"},{"size":570,"mtime":1606883617875,"results":"43","hashOfConfig":"24"},{"size":747,"mtime":1606883694854,"results":"44","hashOfConfig":"24"},{"size":1863,"mtime":1606889739542,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1ro6ga9",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"C:\\Users\\BIT\\Desktop\\bitflix\\src\\index.js",[],["96","97"],"C:\\Users\\BIT\\Desktop\\bitflix\\src\\components\\App.js",[],"C:\\Users\\BIT\\Desktop\\bitflix\\src\\components\\GlobalStyles.js",[],"C:\\Users\\BIT\\Desktop\\bitflix\\src\\components\\Router.js",["98"],"import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nimport Home from \"../routes/Home\";\r\nimport TV from \"../routes/TV\";\r\nimport Search from \"../routes/Search\";\r\nimport Detail from \"../routes/Detail\";\r\n\r\n// 오로지 라우터만 관리하는 컴포넌트가 될 것이다.\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      {/* 기본적으로 Switch가 없이 라우터를 배치하면 모든 라우터를 탄다.\r\n          Switch를 활용하면 오로지 하나의 라우터만 타게 된다. */}\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","C:\\Users\\BIT\\Desktop\\bitflix\\src\\components\\Header.js",[],"C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\Home\\index.js",[],"C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\TV\\index.js",[],"C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\Detail\\index.js",[],"C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\Search\\index.js",[],"C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\Search\\SearchContainer.js",["99"],"C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\TV\\TVContainer.js",["100","101"],"import React from \"react\";\r\nimport { tvApi } from \"../../api\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  // 클래스형 컴포넌트에서 state 만들기\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        error: \"TV 정보를 찾을 수 없습니다.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  // 함수형 컴포넌트에서 return에 해당한다.\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\Home\\HomeContainer.js",["102","103"],"import React from \"react\";\r\nimport { moviesApi } from \"../../api\";\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\n// Container의 역할: Application에서 사용되어지는 기능(함수),\r\n// 상태(State), 이벤트 등을 구현하고, Presenter에 전달\r\nexport default class extends React.Component {\r\n  // 클래스형 컴포넌트에서 state 만들기\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  // 컴포넌트가 부모 컴포넌트에 마운트 됐을 때 호출되는 함수\r\n  // useEffect(() => {}, [])와 같다.\r\n  // useEffect 에서의 비동기 처리와는 다르게, 클래스형 컴포넌트의 componentDidMount 에서의\r\n  // 비동기 처리는 앞에 async 키워드를 붙여주면 된다.\r\n  async componentDidMount() {\r\n    try {\r\n      // data -> results에 원하는 내용이 있었음\r\n      // data: { result: [{}, {}, {}...] }\r\n      // data.results에 들어있는 값을 nowPlaying 변수로 선언\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        error: \"영화 정보를 찾을 수 없습니다.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  // constructor: 클래스 생성자\r\n  //   생성자의 매개변수로 부모 컴포넌트의 props가 들어온다.\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  // 함수형 컴포넌트에서 return에 해당한다.\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\Detail\\DetailContainer.js",["104"],"import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  // 생성자에서 영화 상세 페이지를 표현해야 하는지를 설정\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // id 가지고 오기 -> match.params\r\n    // 만약에 id가 들어오지 않으면 Home으로 강제 이동 -> history의 push함수가 해준다.\r\n    // redirect: 사용자의 요청을 서버가 받고, 재요청 하도록 하는 것\r\n\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n\r\n    const parsedId = parseInt(id);\r\n\r\n    // 올바르지 않은 id라면\r\n    if (isNaN(parsedId)) {\r\n      // Home으로 redirect\r\n      return push(\"/\");\r\n    }\r\n\r\n    const { isMovie } = this.state;\r\n    let result = null;\r\n\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch (error) {\r\n      this.setState({\r\n        error: \"아무것도 찾을 수가 없습니다.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n        result,\r\n      });\r\n    }\r\n  }\r\n\r\n  // 함수형 컴포넌트에서 return에 해당한다.\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\Search\\SearchPresenter.js",[],"C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\TV\\TVPresenter.js",[],"C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\Home\\HomePresenter.js",[],"C:\\Users\\BIT\\Desktop\\bitflix\\src\\routes\\Detail\\DetailPresenter.js",[],"C:\\Users\\BIT\\Desktop\\bitflix\\src\\api.js",[],"C:\\Users\\BIT\\Desktop\\bitflix\\src\\components\\Loader.js",[],"C:\\Users\\BIT\\Desktop\\bitflix\\src\\components\\Message.js",[],"C:\\Users\\BIT\\Desktop\\bitflix\\src\\components\\Section.js",[],"C:\\Users\\BIT\\Desktop\\bitflix\\src\\components\\Poster.js",[],["105","106"],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":11,"column":1,"nodeType":"113","endLine":26,"endColumn":3},{"ruleId":"111","severity":1,"message":"114","line":5,"column":1,"nodeType":"113","endLine":84,"endColumn":2},{"ruleId":"111","severity":1,"message":"114","line":5,"column":1,"nodeType":"113","endLine":61,"endColumn":2},{"ruleId":"115","severity":1,"message":"116","line":43,"column":3,"nodeType":"117","messageId":"118","endLine":45,"endColumn":4},{"ruleId":"111","severity":1,"message":"114","line":7,"column":1,"nodeType":"113","endLine":72,"endColumn":2},{"ruleId":"115","severity":1,"message":"116","line":54,"column":3,"nodeType":"117","messageId":"118","endLine":56,"endColumn":4},{"ruleId":"111","severity":1,"message":"114","line":5,"column":1,"nodeType":"113","endLine":69,"endColumn":2},{"ruleId":"107","replacedBy":"119"},{"ruleId":"109","replacedBy":"120"},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous class","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["121"],["122"],"no-global-assign","no-unsafe-negation"]